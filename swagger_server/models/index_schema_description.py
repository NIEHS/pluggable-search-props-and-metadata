# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IndexSchemaDescription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, es_id: str=None, name: str=None, info: str=None, version: str=None):  # noqa: E501
        """IndexSchemaDescription - a model defined in Swagger

        :param id: The id of this IndexSchemaDescription.  # noqa: E501
        :type id: str
        :param es_id: The es_id of this IndexSchemaDescription.  # noqa: E501
        :type es_id: str
        :param name: The name of this IndexSchemaDescription.  # noqa: E501
        :type name: str
        :param info: The info of this IndexSchemaDescription.  # noqa: E501
        :type info: str
        :param version: The version of this IndexSchemaDescription.  # noqa: E501
        :type version: str
        """
        self.swagger_types = {
            'id': str,
            'es_id': str,
            'name': str,
            'info': str,
            'version': str
        }

        self.attribute_map = {
            'id': 'id',
            'es_id': 'es_id',
            'name': 'name',
            'info': 'info',
            'version': 'version'
        }
        self._id = id
        self._es_id = es_id
        self._name = name
        self._info = info
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'IndexSchemaDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The index-schema-description of this IndexSchemaDescription.  # noqa: E501
        :rtype: IndexSchemaDescription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this IndexSchemaDescription.

        Unique identifier for this index type  # noqa: E501

        :return: The id of this IndexSchemaDescription.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this IndexSchemaDescription.

        Unique identifier for this index type  # noqa: E501

        :param id: The id of this IndexSchemaDescription.
        :type id: str
        """

        self._id = id

    @property
    def es_id(self) -> str:
        """Gets the es_id of this IndexSchemaDescription.

        elastic search schema mapped by this grid search id  # noqa: E501

        :return: The es_id of this IndexSchemaDescription.
        :rtype: str
        """
        return self._es_id

    @es_id.setter
    def es_id(self, es_id: str):
        """Sets the es_id of this IndexSchemaDescription.

        elastic search schema mapped by this grid search id  # noqa: E501

        :param es_id: The es_id of this IndexSchemaDescription.
        :type es_id: str
        """

        self._es_id = es_id

    @property
    def name(self) -> str:
        """Gets the name of this IndexSchemaDescription.

        Display name for this index type  # noqa: E501

        :return: The name of this IndexSchemaDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this IndexSchemaDescription.

        Display name for this index type  # noqa: E501

        :param name: The name of this IndexSchemaDescription.
        :type name: str
        """

        self._name = name

    @property
    def info(self) -> str:
        """Gets the info of this IndexSchemaDescription.

        Documentation about this particular index type  # noqa: E501

        :return: The info of this IndexSchemaDescription.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info: str):
        """Sets the info of this IndexSchemaDescription.

        Documentation about this particular index type  # noqa: E501

        :param info: The info of this IndexSchemaDescription.
        :type info: str
        """

        self._info = info

    @property
    def version(self) -> str:
        """Gets the version of this IndexSchemaDescription.

        Version identifier for this endpoint, preferably in semantic versioning style  # noqa: E501

        :return: The version of this IndexSchemaDescription.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this IndexSchemaDescription.

        Version identifier for this endpoint, preferably in semantic versioning style  # noqa: E501

        :param version: The version of this IndexSchemaDescription.
        :type version: str
        """

        self._version = version
